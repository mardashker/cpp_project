Index: src/Helpers/UserDataGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Helpers;\r\n\r\nimport Moduls.Ticket;\r\nimport Moduls.TicketType;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.time.LocalDate;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.util.*;\r\nimport java.util.SplittableRandom;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.Stream;\r\n\r\npublic class UserDataGenerator {\r\n    private static UserDataGenerator userDataGenerator;\r\n    public static UserDataGenerator getInstance() throws IOException {\r\n        if(userDataGenerator == null){\r\n            userDataGenerator = new UserDataGenerator();\r\n        }\r\n        return userDataGenerator;\r\n    }\r\n\r\n    private static SplittableRandom  randomizer;\r\n\r\n    private static List<String> randomFisrtNameList;\r\n    private List<String> randomCityList;\r\n    private static List<String> randomLastNameList;\r\n\r\n    private UserDataGenerator() throws IOException {\r\n        randomizer = new SplittableRandom();\r\n        File fileFirstName = new File(\"cpp_project/src/resources/first_name.txt\");\r\n        File fileLastName = new File(\"cpp_project/src/resources/last_name.txt\");\r\n        File fileCities = new File(\"cpp_project/src/resources/city.txt\");\r\n        try (Stream<String> lines = Files.lines(fileFirstName.toPath())){\r\n            randomFisrtNameList = lines.collect(Collectors.toList());\r\n        }\r\n        try (Stream<String> lines = Files.lines(fileLastName.toPath())) {\r\n            randomLastNameList = lines.collect(Collectors.toList());\r\n        }\r\n        try (Stream<String> lines = Files.lines(fileCities.toPath())) {\r\n            randomCityList = lines.collect(Collectors.toList());\r\n        }\r\n    }\r\n    public  String generatePhoneNumber(){\r\n        return \"+380\" + randomizer.nextInt(999999999);\r\n    }\r\n    public String generatePassportId(){\r\n        return String.valueOf(randomizer.nextInt(999999999));\r\n    }\r\n    public String generateName(){\r\n        return randomFisrtNameList.get(randomizer.nextInt(randomFisrtNameList.size()));\r\n    }\r\n    public String generateLastName(){\r\n        return randomLastNameList.get(randomizer.nextInt(randomLastNameList.size()));\r\n    }\r\n\r\n    public int generateAge(){\r\n        return randomizer.nextInt(18,61);\r\n    }\r\n    public List<Ticket> generateTickets(){\r\n        var tickets = new ArrayList<Ticket>();\r\n        for(int i = randomizer.nextInt(1,5); i > 0; i--){\r\n            tickets.add(new Ticket(TicketType.values()[randomizer.nextInt(TicketType.values().length)],randomizer.nextInt(100,1000),randomCityList.get(randomizer.nextInt(randomCityList.size())),randomDate(LocalDate.now(),12)));\r\n        }\r\n        return tickets;\r\n    }\r\n    private LocalDate randomDate(LocalDate start, int months) {\r\n        LocalDate end = start.plusMonths(months);\r\n        int days = (int) ChronoUnit.DAYS.between(start, end);\r\n        return start.plusDays(randomizer.nextInt(days + 1));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Helpers/UserDataGenerator.java b/src/Helpers/UserDataGenerator.java
--- a/src/Helpers/UserDataGenerator.java	(revision 4ecbdfca188ffbb5afc82a851bbae48b199d7875)
+++ b/src/Helpers/UserDataGenerator.java	(date 1667642879976)
@@ -1,19 +1,10 @@
 package Helpers;
 
-import Moduls.Ticket;
-import Moduls.TicketType;
-
 import java.io.File;
 import java.io.IOException;
-import java.net.URL;
 import java.nio.file.Files;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-import java.time.LocalDate;
-import java.time.temporal.ChronoUnit;
-import java.util.*;
+import java.util.List;
 import java.util.SplittableRandom;
-import java.util.concurrent.ThreadLocalRandom;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
@@ -26,26 +17,25 @@
         return userDataGenerator;
     }
 
+    File fileFirstName = new File("src/resources/first_name.txt");
+
+    File fileLastName = new File("src/resources/last_name.txt");
+
+    //private String fileFirstName = "C:\\Users\\User\\IdeaProjects\\Project\\cpp_project\\src\\resources\\first_name.txt";
+    //private String fileLastName = "C:\\Users\\User\\IdeaProjects\\Project\\cpp_project\\src\\resources\\last_name.txt";
     private static SplittableRandom  randomizer;
 
     private static List<String> randomFisrtNameList;
-    private List<String> randomCityList;
     private static List<String> randomLastNameList;
 
     private UserDataGenerator() throws IOException {
         randomizer = new SplittableRandom();
-        File fileFirstName = new File("cpp_project/src/resources/first_name.txt");
-        File fileLastName = new File("cpp_project/src/resources/last_name.txt");
-        File fileCities = new File("cpp_project/src/resources/city.txt");
         try (Stream<String> lines = Files.lines(fileFirstName.toPath())){
             randomFisrtNameList = lines.collect(Collectors.toList());
         }
         try (Stream<String> lines = Files.lines(fileLastName.toPath())) {
             randomLastNameList = lines.collect(Collectors.toList());
         }
-        try (Stream<String> lines = Files.lines(fileCities.toPath())) {
-            randomCityList = lines.collect(Collectors.toList());
-        }
     }
     public  String generatePhoneNumber(){
         return "+380" + randomizer.nextInt(999999999);
@@ -63,16 +53,4 @@
     public int generateAge(){
         return randomizer.nextInt(18,61);
     }
-    public List<Ticket> generateTickets(){
-        var tickets = new ArrayList<Ticket>();
-        for(int i = randomizer.nextInt(1,5); i > 0; i--){
-            tickets.add(new Ticket(TicketType.values()[randomizer.nextInt(TicketType.values().length)],randomizer.nextInt(100,1000),randomCityList.get(randomizer.nextInt(randomCityList.size())),randomDate(LocalDate.now(),12)));
-        }
-        return tickets;
-    }
-    private LocalDate randomDate(LocalDate start, int months) {
-        LocalDate end = start.plusMonths(months);
-        int days = (int) ChronoUnit.DAYS.between(start, end);
-        return start.plusDays(randomizer.nextInt(days + 1));
-    }
 }
\ No newline at end of file
